%This script is used to plot test errors for the best selected models 

%prepare data
% Extract predictors and response
inputTable = trainingFeaturesDataTable;
%Extract features/predictors from inputTable
predictorData = inputTable(:,1:end-1);
predictorNames = predictorData.Properties.VariableNames;
predictors = inputTable(:, predictorNames);
response = inputTable.label;

testdata = testFeaturesDataTable;
% disp('Converting test data variable names to match training data, this may take some time...........')
testdata.Properties.VariableNames = inputTable.Properties.VariableNames;
testdata = testdata(:,1:end-1);
Ytest = test_labels;
rng(1); % For reproducibility

%Fit the models
%-----------------------------------------------------------------
%Model 1 - Robust Boosting
robustBoost = fitensemble(...
               train_features,...
               train_labels_cat,...
               'RobustBoost',...
               300,...
               'Tree',...
               'Type', 'Classification', ...
               'RobustErrorGoal',0.15,...
               'RobustMaxMargin',1,...
               'ClassNames', {'Kangaroo'; 'NotKangaroo'});
 %Model 2 - Subspace Boosting
 subspaceDimension = max(1, min(2688, width(predictors) - 1));
            subspaceBoost = fitensemble(...
               train_features,...
               train_labels_cat,...
                'Subspace',...
                300,...
                'Discriminant', ...
                'Type', 'Classification', ...
                'NPredToSample', subspaceDimension, ...
                'ClassNames', {'Kangaroo'; 'NotKangaroo'});
   %Model 3 - Gentle boost
   template = templateTree(...
            'MaxNumSplits', 25);                    %no. of slipts
           gentleBoost = fitensemble(...
                train_features,...
               train_num_labels,...
                'GentleBoost', ...
                300, ...                                 %No. of learners (decision trees)
                template, ...
                'Type', 'Classification', ...
                'ClassNames', {'Kangaroo'; 'NotKangaroo'});
            
     %Plot the model errors
     figure;
        plot(loss(robustBoost,test_features,test_num_labels,'mode','cumulative'));
        hold on
        plot(loss(subspaceBoost,test_features,test_num_labels,'Mode','cumulative'),'r--')
        hold off
        xlabel('Number of trees');
        ylabel('Test classification error');
        legend('Test','Location','NE');